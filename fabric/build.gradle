plugins {
    id 'java'
    id 'idea'
    id 'fabric-loom'
    id 'me.modmuss50.mod-publish-plugin' version '0.4.2'
}
base.archivesName = "$mod_id-fabric-$minecraft_version-$mod_version"

dependencies {
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:$fabricLoaderVersion"
    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabricApiVersion"
    implementation project(':common')
}

loom {
    runs {
        client {
            client()
            setConfigName('Fabric Client')
            ideConfigGenerated(true)
            runDir('run/client')
        }
        server {
            server()
            setConfigName('Fabric Server')
            ideConfigGenerated(true)
            runDir('run/server')
        }
        datagenClient {
            inherit client
            setConfigName('Fabric Data')
            vmArg '-Dfabric-api.datagen'
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=$mod_id"
            runDir('run/data')
        }
    }
}
sourceSets.main.resources.srcDirs += ['src/main/generated']

tasks.withType(JavaCompile).configureEach {
    source(project(':common').sourceSets.main.allSource)
}

processResources {
    from project(':common').sourceSets.main.resources
}

publishMods {
    displayName = "$mod_id-fabric-$minecraft_version-$mod_version"
    version = mod_version
    type = STABLE

    def changelogFile = project(':common').file('CHANGELOG.md')
    changelog = changelogFile.exists() ? changelogFile.text : 'CHANGELOG.md not found'

    modLoaders.add('fabric')
    file = remapJar.archiveFile

    curseforge {
        projectId = curseforge_projectId
        accessToken = providers.environmentVariable('CURSEFORGE_TOKEN')
        minecraftVersions.add(minecraft_version)
        requires {
            slug = 'fabric-api'
        }
    }
    modrinth {
        projectId = modrinth_projectId
        accessToken = providers.environmentVariable('MODRINTH_TOKEN')
        minecraftVersions.add(minecraft_version)
        requires {
            slug = 'fabric-api'
        }
    }
}