import se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask
import static org.apache.commons.lang3.StringUtils.repeat

plugins {
    id 'eclipse'
    id 'idea'
    id 'net.neoforged.gradle' version '[6.0.18,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'se.bjurr.gitchangelog.git-changelog-gradle-plugin' version '1.79.0'
    id 'me.modmuss50.mod-publish-plugin' version '0.3.3'
}

version = "$minecraft_version-$mod_version"
group = 'edivad.morejeiinfo'

base.archivesName = "MoreJeiInfo-${minecraft_version}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println(repeat('*', 60))
println("Project Version: $version")
println("Java: ${System.getProperty('java.version')}")
println("JVM: ${System.getProperty('java.vm.version')} (${System.getProperty('java.vendor')})")
println("Arch: ${System.getProperty('os.arch')}")
println(repeat('*', 60))

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true

    runs {
        configureEach {
            property 'forge.logging.console.level', 'debug'

            mods {
                morejeiinfo {
                    source sourceSets.main
                }
            }
        }

        client {
            workingDirectory project.file('run/client')
        }

        server {
            workingDirectory project.file('run/server')
        }

        data {
            workingDirectory project.file('run/data')
            args '--mod', 'morejeiinfo', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name 'JEI'
        url 'https://maven.blamejared.com/'
    }
}

dependencies {
    minecraft "net.neoforged:forge:${minecraft_version}-${neo_version}"

    compileOnly fg.deobf("mezz.jei:jei-$minecraft_version-common-api:$jei_version")
    compileOnly fg.deobf("mezz.jei:jei-$minecraft_version-forge-api:$jei_version")
    runtimeOnly fg.deobf("mezz.jei:jei-$minecraft_version-forge:$jei_version")
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
        mod_version: mod_version
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : project.name,
                'Specification-Vendor'    : 'Edivad99',
                'Specification-Version'   : '1',
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.version,
                'Implementation-Vendor'   : 'Edivad99',
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.register('makeChangelog', GitChangelogTask) {
    fromRepo = projectDir.absolutePath.toString()
    toRef = 'HEAD'
    file = file('CHANGELOG.md')
    untaggedName = 'Next release'
    templateContent = file('changelog.mustache').text
}

publishMods {
    displayName = "morejeiinfo-$minecraft_version-$mod_version"
    version = mod_version
    type = STABLE

    def changelogFile = file('CHANGELOG.md')
    changelog = changelogFile.exists() ? changelogFile.text : 'CHANGELOG.md not found'

    modLoaders.add('neoforge')
    if (minecraft_version.equals('1.20.1')) {
        modLoaders.add('forge')
    }
    file = jar.archiveFile

    curseforge {
        projectId = '902996'
        accessToken = providers.environmentVariable('CURSEFORGE_TOKEN')
        minecraftVersions.add(minecraft_version)
    }
    modrinth {
        projectId = 'bpVBqwnF'
        accessToken = providers.environmentVariable('MODRINTH_TOKEN')
        minecraftVersions.add(minecraft_version)
    }
}
